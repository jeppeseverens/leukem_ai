colnames(prob_matrix) <- class_labels
truth_vector <- rep(NA, n_samples)
for (j in seq_along(class_labels)) {
class_label <- class_labels[j]
best_param <- best_params_df[
best_params_df$outer_fold == outer_fold_id & best_params_df$class_label == class_label,
]$params
best_param_row <- inner_fold_data[
inner_fold_data$class_label == class_label & inner_fold_data$params == best_param,
]
if (nrow(best_param_row) == 0) next
prob_matrix[, j] <- clean_probs_str(best_param_row$preds_prob)
y_val <- clean_y_str(best_param_row$y_val)
truth_vector[y_val == 1] <- class_label
}
if (all(is.na(truth_vector))) next
prob_matrix <- data.frame(prob_matrix)
for (col in make.names(label_mapping$Label)) {
if (!col %in% names(prob_matrix)) {
prob_matrix[[col]] <- 0
}
}
prob_matrix <- prob_matrix[,make.names(label_mapping$Label)]
prob_matrix$y <- truth_vector
prob_dfs[[as.character(outer_fold_id)]][[as.character(inner_fold_id)]] <- prob_matrix
}
prob_dfs[[as.character(outer_fold_id)]] <- do.call(rbind, prob_dfs[[as.character(outer_fold_id)]])
prob_dfs[is.na(prob_dfs)] <- 0
}
return(prob_dfs)
}
prob_dfs_SVM_CV_OvR <- get_prob_dfs(inner_res_svm_OvR, best_param_svm_OvR)
prob_dfs_SVM_loso_OvR <- get_prob_dfs(inner_res_svm_OvR_loso, best_param_svm_OvR)
prob_dfs_XGBOOST_CV_OvR <- get_prob_dfs(inner_res_xgb_OvR, best_param_xgb_OvR)
prob_dfs_XGBOOST_loso_OvR <- get_prob_dfs(inner_res_xgb_OvR_loso, best_param_xgb_OvR_loso)
prob_dfs_NN_CV_standard <- get_prob_dfs(inner_res_nn_standard, best_param_nn_standard)
best_params_df <- best_param_nn_standard
results_df <- inner_res_nn_standard
outer_fold_data <- results_df[results_df$outer_fold == outer_fold_id, ]
inner_folds <- unique(outer_fold_data$inner_fold)
prob_dfs[[as.character(outer_fold_id)]] <- list()
inner_fold_id
inner_fold_data <- outer_fold_data[outer_fold_data$inner_fold == inner_fold_id, ]
class_labels <- unique(clean_probs_str(inner_fold_data$classes))
class_labels <- unique(clean_probs_str(inner_fold_data$classes))
class_labels
class_labels <- label_mapping$Label[class_labels + 1]
n_classes <- length(class_labels)
class_labels
inner_fold_data
class_labels <- unique(clean_probs_str(inner_fold_data$classes[1]))
class_labels <- label_mapping$Label[class_labels + 1]
n_samples <- length(clean_probs_str(inner_fold_data$y_val[1]))
best_param <- best_params_df[
best_params_df$outer_fold == outer_fold_id & best_params_df$class_label == class_label,
]$params
best_params_df$outer_fold == outer_fold_id,]$params
best_param <- best_params_df[best_params_df$outer_fold == outer_fold_id,]$params
best_param
inner_fold_data <- outer_fold_data[outer_fold_data$inner_fold == inner_fold_id & outer_fold_data$params == best_param, ]
class_labels <- unique(clean_probs_str(inner_fold_data$classes))
class_labels <- label_mapping$Label[class_labels + 1]
n_samples <- length(clean_probs_str(inner_fold_data$y_val))
prob_matrix <- matrix(clean_probs_str(inner_fold_data$preds_prob), nrow = n_samples, ncol = n_classes)
View(prob_matrix)
colnames(prob_matrix) <- class_labels
colnames(prob_matrix) <- make.names(class_labels)
colnames(prob_matrix) <- make.names(class_labels)
prob_matrix <- data.frame(prob_matrix)
for (col in make.names(label_mapping$Label)) {
if (!col %in% names(prob_matrix)) {
prob_matrix[[col]] <- 0
}
}
prob_matrix <- prob_matrix[,make.names(label_mapping$Label)]
make.names(label_mapping$Label)[clean_probs_str(inner_fold_data$y_val)]
make.names(label_mapping$Label)[clean_probs_str(inner_fold_data$y_val)+1]
get_prob_dfs_standard <- function(results_df, best_params_df) {
best_params_df <- add_labels(best_params_df)
outer_folds <- unique(results_df$outer_fold)
prob_dfs <- list()
for (outer_fold_id in outer_folds) {
outer_fold_data <- results_df[results_df$outer_fold == outer_fold_id, ]
inner_folds <- unique(outer_fold_data$inner_fold)
prob_dfs[[as.character(outer_fold_id)]] <- list()
for (inner_fold_id in inner_folds) {
best_param <- best_params_df[best_params_df$outer_fold == outer_fold_id,]$params
inner_fold_data <- outer_fold_data[outer_fold_data$inner_fold == inner_fold_id & outer_fold_data$params == best_param, ]
class_labels <- unique(clean_probs_str(inner_fold_data$classes))
class_labels <- label_mapping$Label[class_labels + 1]
n_classes <- length(class_labels)
n_samples <- length(clean_probs_str(inner_fold_data$y_val))
prob_matrix <- matrix(clean_probs_str(inner_fold_data$preds_prob), nrow = n_samples, ncol = n_classes)
colnames(prob_matrix) <- make.names(class_labels)
prob_matrix <- data.frame(prob_matrix)
for (col in make.names(label_mapping$Label)) {
if (!col %in% names(prob_matrix)) {
prob_matrix[[col]] <- 0
}
}
prob_matrix <- prob_matrix[,make.names(label_mapping$Label)]
prob_matrix$y <- make.names(label_mapping$Label)[clean_probs_str(inner_fold_data$y_val)+1]
prob_dfs[[as.character(outer_fold_id)]][[as.character(inner_fold_id)]] <- prob_matrix
}
prob_dfs[[as.character(outer_fold_id)]] <- do.call(rbind, prob_dfs[[as.character(outer_fold_id)]])
}
return(prob_dfs)
}
prob_dfs_NN_CV_standard <- get_prob_dfs_standard(inner_res_nn_standard, best_param_nn_standard)
best_params_df <- add_labels(best_params_df)
get_prob_dfs_standard <- function(results_df, best_params_df) {
outer_folds <- unique(results_df$outer_fold)
prob_dfs <- list()
for (outer_fold_id in outer_folds) {
outer_fold_data <- results_df[results_df$outer_fold == outer_fold_id, ]
inner_folds <- unique(outer_fold_data$inner_fold)
prob_dfs[[as.character(outer_fold_id)]] <- list()
for (inner_fold_id in inner_folds) {
best_param <- best_params_df[best_params_df$outer_fold == outer_fold_id,]$params
inner_fold_data <- outer_fold_data[outer_fold_data$inner_fold == inner_fold_id & outer_fold_data$params == best_param, ]
class_labels <- unique(clean_probs_str(inner_fold_data$classes))
class_labels <- label_mapping$Label[class_labels + 1]
n_classes <- length(class_labels)
n_samples <- length(clean_probs_str(inner_fold_data$y_val))
prob_matrix <- matrix(clean_probs_str(inner_fold_data$preds_prob), nrow = n_samples, ncol = n_classes)
colnames(prob_matrix) <- make.names(class_labels)
prob_matrix <- data.frame(prob_matrix)
for (col in make.names(label_mapping$Label)) {
if (!col %in% names(prob_matrix)) {
prob_matrix[[col]] <- 0
}
}
prob_matrix <- prob_matrix[,make.names(label_mapping$Label)]
prob_matrix$y <- make.names(label_mapping$Label)[clean_probs_str(inner_fold_data$y_val)+1]
prob_dfs[[as.character(outer_fold_id)]][[as.character(inner_fold_id)]] <- prob_matrix
}
prob_dfs[[as.character(outer_fold_id)]] <- do.call(rbind, prob_dfs[[as.character(outer_fold_id)]])
}
return(prob_dfs)
}
prob_dfs_NN_CV_standard <- get_prob_dfs_standard(inner_res_nn_standard, best_param_nn_standard)
prob_dfs_NN_loso_standard <- get_prob_dfs_standard(inner_res_nn_standard_loso, best_param_nn_standard_loso)
inner_fold_data$classes)
class_labels <- unique(clean_probs_str(inner_fold_data$classes))
View(inner_res_nn_standard_loso)
n_samples <- length(clean_probs_str(inner_fold_data$sample_indices))
prob_matrix <- matrix(clean_probs_str(inner_fold_data$preds_prob), nrow = n_samples, ncol = n_classes)
get_prob_dfs_standard <- function(results_df, best_params_df) {
outer_folds <- unique(results_df$outer_fold)
prob_dfs <- list()
for (outer_fold_id in outer_folds) {
outer_fold_data <- results_df[results_df$outer_fold == outer_fold_id, ]
inner_folds <- unique(outer_fold_data$inner_fold)
prob_dfs[[as.character(outer_fold_id)]] <- list()
for (inner_fold_id in inner_folds) {
best_param <- best_params_df[best_params_df$outer_fold == outer_fold_id,]$params
inner_fold_data <- outer_fold_data[outer_fold_data$inner_fold == inner_fold_id & outer_fold_data$params == best_param, ]
class_labels <- unique(clean_probs_str(inner_fold_data$classes))
class_labels <- label_mapping$Label[class_labels + 1]
n_classes <- length(class_labels)
n_samples <- length(clean_probs_str(inner_fold_data$sample_indices))
prob_matrix <- matrix(clean_probs_str(inner_fold_data$preds_prob), nrow = n_samples, ncol = n_classes)
colnames(prob_matrix) <- make.names(class_labels)
prob_matrix <- data.frame(prob_matrix)
for (col in make.names(label_mapping$Label)) {
if (!col %in% names(prob_matrix)) {
prob_matrix[[col]] <- 0
}
}
prob_matrix <- prob_matrix[,make.names(label_mapping$Label)]
prob_matrix$y <- make.names(label_mapping$Label)[clean_probs_str(inner_fold_data$y_val)+1]
prob_dfs[[as.character(outer_fold_id)]][[as.character(inner_fold_id)]] <- prob_matrix
}
prob_dfs[[as.character(outer_fold_id)]] <- do.call(rbind, prob_dfs[[as.character(outer_fold_id)]])
}
return(prob_dfs)
}
prob_dfs_NN_CV_standard <- get_prob_dfs_standard(inner_res_nn_standard, best_param_nn_standard)
prob_dfs_NN_loso_standard <- get_prob_dfs_standard(inner_res_nn_standard_loso, best_param_nn_standard_loso)
results_df <- inner_res_nn_standard_loso
best_params_df <- best_param_nn_standard_loso
outer_folds <- unique(results_df$outer_fold)
prob_dfs <- list()
outer_fold_id <- outer_folds[1]
outer_fold_data <- results_df[results_df$outer_fold == outer_fold_id, ]
inner_folds <- unique(outer_fold_data$inner_fold)
prob_dfs[[as.character(outer_fold_id)]] <- list()
inner_fold_id <- inner_folds[1]
best_param <- best_params_df[best_params_df$outer_fold == outer_fold_id,]$params
inner_fold_data <- outer_fold_data[outer_fold_data$inner_fold == inner_fold_id & outer_fold_data$params == best_param, ]
class_labels <- unique(clean_probs_str(inner_fold_data$classes))
class_labels <- label_mapping$Label[class_labels + 1]
n_classes <- length(class_labels)
n_samples <- length(clean_probs_str(inner_fold_data$sample_indices))
prob_matrix <- matrix(clean_probs_str(inner_fold_data$preds_prob), nrow = n_samples, ncol = n_classes)
colnames(prob_matrix) <- make.names(class_labels)
prob_matrix <- data.frame(prob_matrix)
for (col in make.names(label_mapping$Label)) {
if (!col %in% names(prob_matrix)) {
prob_matrix[[col]] <- 0
}
}
prob_matrix <- prob_matrix[,make.names(label_mapping$Label)]
prob_matrix$y <- make.names(label_mapping$Label)[clean_probs_str(inner_fold_data$y_val)+1]
rgas_path <- "../data/rgas.csv"
y <- read.csv(rgas_path)$ICC_Subtype
studies_path <- "../data/meta.csv"
studies <- read.csv(studies_path)$Studies
atleast_10 <- names(which(table(y) >=10))
exclude <- c("AML NOS", "Missing data")
selected_studies <- c(
"TCGA-LAML",
"LEUCEGENE",
"BEATAML1.0-COHORT",
"AAML0531",
"AAML1031"
)
y <- y[y %in% atleast_10 & !y %in% exclude & studies %in% selected_studies]
y
prob_matrix$y <- make.names(y[clean_probs_str(inner_fold_data$sample_indices) + 1]
prob_dfs[[as.character(outer_fold_id)]][[as.character(inner_fold_id)]] <- prob_matrix
prob_matrix$y <- make.names(y[clean_probs_str(inner_fold_data$sample_indices) + 1])
get_prob_dfs_standard <- function(results_df, best_params_df) {
outer_folds <- unique(results_df$outer_fold)
prob_dfs <- list()
for (outer_fold_id in outer_folds) {
outer_fold_data <- results_df[results_df$outer_fold == outer_fold_id, ]
inner_folds <- unique(outer_fold_data$inner_fold)
prob_dfs[[as.character(outer_fold_id)]] <- list()
for (inner_fold_id in inner_folds) {
best_param <- best_params_df[best_params_df$outer_fold == outer_fold_id,]$params
inner_fold_data <- outer_fold_data[outer_fold_data$inner_fold == inner_fold_id & outer_fold_data$params == best_param, ]
class_labels <- unique(clean_probs_str(inner_fold_data$classes))
class_labels <- label_mapping$Label[class_labels + 1]
n_classes <- length(class_labels)
n_samples <- length(clean_probs_str(inner_fold_data$sample_indices))
prob_matrix <- matrix(clean_probs_str(inner_fold_data$preds_prob), nrow = n_samples, ncol = n_classes)
colnames(prob_matrix) <- make.names(class_labels)
prob_matrix <- data.frame(prob_matrix)
for (col in make.names(label_mapping$Label)) {
if (!col %in% names(prob_matrix)) {
prob_matrix[[col]] <- 0
}
}
prob_matrix <- prob_matrix[,make.names(label_mapping$Label)]
prob_matrix$y <- make.names(y[clean_probs_str(inner_fold_data$sample_indices) + 1])
prob_dfs[[as.character(outer_fold_id)]][[as.character(inner_fold_id)]] <- prob_matrix
}
prob_dfs[[as.character(outer_fold_id)]] <- do.call(rbind, prob_dfs[[as.character(outer_fold_id)]])
}
return(prob_dfs)
}
prob_dfs_NN_CV_standard <- get_prob_dfs_standard(inner_res_nn_standard, best_param_nn_standard)
prob_dfs_NN_loso_standard <- get_prob_dfs_standard(inner_res_nn_standard_loso, best_param_nn_standard_loso)
View(prob_dfs_NN_loso_standard)
source("~/Documents/AML_PhD/leukem_ai/R/load_inner_get_best_params.R")
source("~/Documents/AML_PhD/leukem_ai/R/load_inner_get_best_params.R")
source("~/Documents/AML_PhD/leukem_ai/R/load_inner_get_best_params.R")
source("~/Documents/AML_PhD/leukem_ai/R/load_inner_get_best_params.R")
source("~/Documents/AML_PhD/leukem_ai/R/load_inner_get_best_params.R")
source("~/Documents/AML_PhD/leukem_ai/R/load_inner_get_best_params.R")
source("~/Documents/AML_PhD/leukem_ai/R/load_inner_get_best_params.R")
results_df <- inner_res_nn_standard_loso
best_params_df <- best_param_nn_standard_loso
get_prob_dfs_standard <- function(results_df, best_params_df) {
outer_folds <- unique(results_df$outer_fold)
prob_dfs <- list()
for (outer_fold_id in outer_folds) {
outer_fold_data <- results_df[results_df$outer_fold == outer_fold_id, ]
inner_folds <- unique(outer_fold_data$inner_fold)
prob_dfs[[as.character(outer_fold_id)]] <- list()
for (inner_fold_id in inner_folds) {
best_param <- best_params_df[best_params_df$outer_fold == outer_fold_id,]$params
inner_fold_data <- outer_fold_data[outer_fold_data$inner_fold == inner_fold_id & outer_fold_data$params == best_param, ]
class_labels <- unique(clean_probs_str(inner_fold_data$classes))
class_labels <- label_mapping$Label[class_labels + 1]
n_classes <- length(class_labels)
n_samples <- length(clean_probs_str(inner_fold_data$sample_indices))
prob_matrix <- matrix(clean_probs_str(inner_fold_data$preds_prob), nrow = n_samples, ncol = n_classes)
colnames(prob_matrix) <- make.names(class_labels)
prob_matrix <- data.frame(prob_matrix)
for (col in make.names(label_mapping$Label)) {
if (!col %in% names(prob_matrix)) {
prob_matrix[[col]] <- 0
}
}
prob_matrix <- prob_matrix[,make.names(label_mapping$Label)]
prob_matrix$y <- make.names(y[clean_probs_str(inner_fold_data$sample_indices) + 1])
prob_dfs[[as.character(outer_fold_id)]][[as.character(inner_fold_id)]] <- prob_matrix
}
prob_dfs[[as.character(outer_fold_id)]] <- do.call(rbind, prob_dfs[[as.character(outer_fold_id)]])
}
return(prob_dfs)
}
outer_folds <- unique(results_df$outer_fold)
outer_folds
prob_dfs <- list()
outer_fold_id <- outer_folds[1]
outer_fold_data <- results_df[results_df$outer_fold == outer_fold_id, ]
inner_folds <- unique(outer_fold_data$inner_fold)
prob_dfs[[as.character(outer_fold_id)]] <- list()
inner_fold_id <- inner_folds[1]
outer_fold_data <- results_df[results_df$outer_fold == outer_fold_id, ]
inner_folds <- unique(outer_fold_data$inner_fold)
prob_dfs[[as.character(outer_fold_id)]] <- list()
best_param <- best_params_df[best_params_df$outer_fold == outer_fold_id,]$params
inner_fold_data <- outer_fold_data[outer_fold_data$inner_fold == inner_fold_id & outer_fold_data$params == best_param, ]
class_labels <- unique(clean_probs_str(inner_fold_data$classes))
class_labels <- label_mapping$Label[class_labels + 1]
n_classes <- length(class_labels)
n_samples <- length(clean_probs_str(inner_fold_data$sample_indices))
prob_matrix <- matrix(clean_probs_str(inner_fold_data$preds_prob), nrow = n_samples, ncol = n_classes)
colnames(prob_matrix) <- make.names(class_labels)
prob_matrix <- data.frame(prob_matrix)
for (col in make.names(label_mapping$Label)) {
if (!col %in% names(prob_matrix)) {
prob_matrix[[col]] <- 0
}
}
prob_matrix <- prob_matrix[,make.names(label_mapping$Label)]
prob_matrix$y <- make.names(y[clean_probs_str(inner_fold_data$sample_indices) + 1])
prob_dfs[[as.character(outer_fold_id)]][[as.character(inner_fold_id)]] <- prob_matrix
for (inner_fold_id in inner_folds) {
best_param <- best_params_df[best_params_df$outer_fold == outer_fold_id,]$params
inner_fold_data <- outer_fold_data[outer_fold_data$inner_fold == inner_fold_id & outer_fold_data$params == best_param, ]
class_labels <- unique(clean_probs_str(inner_fold_data$classes))
class_labels <- label_mapping$Label[class_labels + 1]
n_classes <- length(class_labels)
n_samples <- length(clean_probs_str(inner_fold_data$sample_indices))
prob_matrix <- matrix(clean_probs_str(inner_fold_data$preds_prob), nrow = n_samples, ncol = n_classes)
colnames(prob_matrix) <- make.names(class_labels)
prob_matrix <- data.frame(prob_matrix)
for (col in make.names(label_mapping$Label)) {
if (!col %in% names(prob_matrix)) {
prob_matrix[[col]] <- 0
}
}
prob_matrix <- prob_matrix[,make.names(label_mapping$Label)]
prob_matrix$y <- make.names(y[clean_probs_str(inner_fold_data$sample_indices) + 1])
prob_dfs[[as.character(outer_fold_id)]][[as.character(inner_fold_id)]] <- prob_matrix
}
for (outer_fold_id in outer_folds) {
outer_fold_data <- results_df[results_df$outer_fold == outer_fold_id, ]
inner_folds <- unique(outer_fold_data$inner_fold)
prob_dfs[[as.character(outer_fold_id)]] <- list()
for (inner_fold_id in inner_folds) {
best_param <- best_params_df[best_params_df$outer_fold == outer_fold_id,]$params
inner_fold_data <- outer_fold_data[outer_fold_data$inner_fold == inner_fold_id & outer_fold_data$params == best_param, ]
class_labels <- unique(clean_probs_str(inner_fold_data$classes))
class_labels <- label_mapping$Label[class_labels + 1]
n_classes <- length(class_labels)
n_samples <- length(clean_probs_str(inner_fold_data$sample_indices))
prob_matrix <- matrix(clean_probs_str(inner_fold_data$preds_prob), nrow = n_samples, ncol = n_classes)
colnames(prob_matrix) <- make.names(class_labels)
prob_matrix <- data.frame(prob_matrix)
for (col in make.names(label_mapping$Label)) {
if (!col %in% names(prob_matrix)) {
prob_matrix[[col]] <- 0
}
}
prob_matrix <- prob_matrix[,make.names(label_mapping$Label)]
prob_matrix$y <- make.names(y[clean_probs_str(inner_fold_data$sample_indices) + 1])
prob_dfs[[as.character(outer_fold_id)]][[as.character(inner_fold_id)]] <- prob_matrix
}
prob_dfs[[as.character(outer_fold_id)]] <- do.call(rbind, prob_dfs[[as.character(outer_fold_id)]])
}
View(prob_dfs)
get_prob_dfs_standard <- function(results_df, best_params_df) {
outer_folds <- unique(results_df$outer_fold)
prob_dfs <- list()
for (outer_fold_id in outer_folds) {
outer_fold_data <- results_df[results_df$outer_fold == outer_fold_id, ]
inner_folds <- unique(outer_fold_data$inner_fold)
prob_dfs[[as.character(outer_fold_id)]] <- list()
for (inner_fold_id in inner_folds) {
best_param <- best_params_df[best_params_df$outer_fold == outer_fold_id,]$params
inner_fold_data <- outer_fold_data[outer_fold_data$inner_fold == inner_fold_id & outer_fold_data$params == best_param, ]
class_labels <- unique(clean_probs_str(inner_fold_data$classes))
class_labels <- label_mapping$Label[class_labels + 1]
n_classes <- length(class_labels)
n_samples <- length(clean_probs_str(inner_fold_data$sample_indices))
prob_matrix <- matrix(clean_probs_str(inner_fold_data$preds_prob), nrow = n_samples, ncol = n_classes)
colnames(prob_matrix) <- make.names(class_labels)
prob_matrix <- data.frame(prob_matrix)
for (col in make.names(label_mapping$Label)) {
if (!col %in% names(prob_matrix)) {
prob_matrix[[col]] <- 0
}
}
prob_matrix <- prob_matrix[,make.names(label_mapping$Label)]
prob_matrix$y <- make.names(y[clean_probs_str(inner_fold_data$sample_indices) + 1])
prob_dfs[[as.character(outer_fold_id)]][[as.character(inner_fold_id)]] <- prob_matrix
}
prob_dfs[[as.character(outer_fold_id)]] <- do.call(rbind, prob_dfs[[as.character(outer_fold_id)]])
}
return(prob_dfs)
}
prob_dfs_NN_loso_standard <- get_prob_dfs_standard(inner_res_nn_standard_loso, best_param_nn_standard_loso)
outer_folds <- unique(results_df$outer_fold)
prob_dfs <- list()
for (outer_fold_id in outer_folds) {
outer_fold_data <- results_df[results_df$outer_fold == outer_fold_id, ]
inner_folds <- unique(outer_fold_data$inner_fold)
prob_dfs[[as.character(outer_fold_id)]] <- list()
for (inner_fold_id in inner_folds) {
best_param <- best_params_df[best_params_df$outer_fold == outer_fold_id,]$params
inner_fold_data <- outer_fold_data[outer_fold_data$inner_fold == inner_fold_id & outer_fold_data$params == best_param, ]
class_labels <- unique(clean_probs_str(inner_fold_data$classes))
class_labels <- label_mapping$Label[class_labels + 1]
n_classes <- length(class_labels)
n_samples <- length(clean_probs_str(inner_fold_data$sample_indices))
prob_matrix <- matrix(clean_probs_str(inner_fold_data$preds_prob), nrow = n_samples, ncol = n_classes)
colnames(prob_matrix) <- make.names(class_labels)
prob_matrix <- data.frame(prob_matrix)
for (col in make.names(label_mapping$Label)) {
if (!col %in% names(prob_matrix)) {
prob_matrix[[col]] <- 0
}
}
prob_matrix <- prob_matrix[,make.names(label_mapping$Label)]
prob_matrix$y <- make.names(y[clean_probs_str(inner_fold_data$sample_indices) + 1])
prob_dfs[[as.character(outer_fold_id)]][[as.character(inner_fold_id)]] <- prob_matrix
}
prob_dfs[[as.character(outer_fold_id)]] <- do.call(rbind, prob_dfs[[as.character(outer_fold_id)]])
}
View(prob_dfs)
prob_dfs_NN_loso_standard <- get_prob_dfs_standard(inner_res_nn_standard_loso, best_param_nn_standard_loso)
get_prob_dfs_ovr <- function(results_df, best_params_df) {
best_params_df <- add_labels(best_params_df)
outer_folds <- unique(results_df$outer_fold)
prob_dfs <- list()
for (outer_fold_id in outer_folds) {
outer_fold_data <- results_df[results_df$outer_fold == outer_fold_id, ]
inner_folds <- unique(outer_fold_data$inner_fold)
prob_dfs[[as.character(outer_fold_id)]] <- list()
for (inner_fold_id in inner_folds) {
inner_fold_data <- outer_fold_data[outer_fold_data$inner_fold == inner_fold_id, ]
class_labels <- unique(inner_fold_data$class_label)
n_classes <- length(class_labels)
if (nrow(inner_fold_data) == 0 || is.null(inner_fold_data$preds_prob[1]) || is.na(inner_fold_data$preds_prob[1])) next
n_samples <- length(clean_probs_str(inner_fold_data$preds_prob[1]))
prob_matrix <- matrix(NA, nrow = n_samples, ncol = n_classes)
colnames(prob_matrix) <- class_labels
truth_vector <- rep(NA, n_samples)
for (j in seq_along(class_labels)) {
class_label <- class_labels[j]
best_param <- best_params_df[
best_params_df$outer_fold == outer_fold_id & best_params_df$class_label == class_label,
]$params
best_param_row <- inner_fold_data[
inner_fold_data$class_label == class_label & inner_fold_data$params == best_param,
]
if (nrow(best_param_row) == 0) next
prob_matrix[, j] <- clean_probs_str(best_param_row$preds_prob)
y_val <- clean_y_str(best_param_row$y_val)
truth_vector[y_val == 1] <- class_label
}
if (all(is.na(truth_vector))) next
prob_matrix <- data.frame(prob_matrix)
for (col in make.names(label_mapping$Label)) {
if (!col %in% names(prob_matrix)) {
prob_matrix[[col]] <- 0
}
}
prob_matrix <- prob_matrix[,make.names(label_mapping$Label)]
prob_matrix$y <- truth_vector
prob_dfs[[as.character(outer_fold_id)]][[as.character(inner_fold_id)]] <- prob_matrix
}
prob_dfs[[as.character(outer_fold_id)]] <- do.call(rbind, prob_dfs[[as.character(outer_fold_id)]])
prob_dfs[is.na(prob_dfs)] <- 0
}
return(prob_dfs)
}
prob_dfs_SVM_CV_OvR <- get_prob_dfs_ovr(inner_res_svm_OvR, best_param_svm_OvR)
prob_dfs_SVM_loso_OvR <- get_prob_dfs_ovr(inner_res_svm_OvR_loso, best_param_svm_OvR)
prob_dfs_SVM_loso_OvR <- get_prob_dfs_ovr(inner_res_svm_OvR_loso, best_param_svm_OvR_loso)
prob_dfs_XGBOOST_CV_OvR <- get_prob_dfs_ovr(inner_res_xgb_OvR, best_param_xgb_OvR)
prob_dfs_XGBOOST_loso_OvR <- get_prob_dfs_ovr(inner_res_xgb_OvR_loso, best_param_xgb_OvR_loso)
get_prob_dfs_standard <- function(results_df, best_params_df) {
outer_folds <- unique(results_df$outer_fold)
prob_dfs <- list()
for (outer_fold_id in outer_folds) {
outer_fold_data <- results_df[results_df$outer_fold == outer_fold_id, ]
inner_folds <- unique(outer_fold_data$inner_fold)
prob_dfs[[as.character(outer_fold_id)]] <- list()
for (inner_fold_id in inner_folds) {
best_param <- best_params_df[best_params_df$outer_fold == outer_fold_id,]$params
inner_fold_data <- outer_fold_data[outer_fold_data$inner_fold == inner_fold_id & outer_fold_data$params == best_param, ]
class_labels <- unique(clean_probs_str(inner_fold_data$classes))
class_labels <- label_mapping$Label[class_labels + 1]
n_classes <- length(class_labels)
n_samples <- length(clean_probs_str(inner_fold_data$sample_indices))
prob_matrix <- matrix(clean_probs_str(inner_fold_data$preds_prob), nrow = n_samples, ncol = n_classes)
colnames(prob_matrix) <- make.names(class_labels)
prob_matrix <- data.frame(prob_matrix)
for (col in make.names(label_mapping$Label)) {
if (!col %in% names(prob_matrix)) {
prob_matrix[[col]] <- 0
}
}
prob_matrix <- prob_matrix[,make.names(label_mapping$Label)]
prob_matrix$y <- make.names(y[clean_probs_str(inner_fold_data$sample_indices) + 1])
prob_dfs[[as.character(outer_fold_id)]][[as.character(inner_fold_id)]] <- prob_matrix
}
prob_dfs[[as.character(outer_fold_id)]] <- do.call(rbind, prob_dfs[[as.character(outer_fold_id)]])
}
return(prob_dfs)
}
prob_dfs_NN_CV_standard <- get_prob_dfs_standard(inner_res_nn_standard, best_param_nn_standard)
prob_dfs_NN_loso_standard <- get_prob_dfs_standard(inner_res_nn_standard_loso, best_param_nn_standard_loso)
cat("All done.")
source("~/Documents/AML_PhD/leukem_ai/R/load_inner_get_best_params.R")
